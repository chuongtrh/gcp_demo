# In this directory, run the following command to build this builder.
steps:
- id: pull_cache_image
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker pull gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest || exit 0

- id: build
  name: 'gcr.io/cloud-builders/docker'
  args: [ 
          'build', 
          '-t', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest', 
          '--cache-from', 'gcr.io/$PROJECT_ID/[IMAGE_NAME]:latest',
          '-f', 'docker/server.dev.dockerfile', 
          '--no-cache',
          '.' 
        ]

 # push the container image to Container Registry
- id: push_image
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest']
  waitFor:
    - build

  # https://cloud.google.com/run/docs/securing/managing-access
  # https://cloud.google.com/run/docs/securing/authenticating
  # Deploy container image to Cloud Run
- id: deploy
  name: 'gcr.io/cloud-builders/gcloud'
  args: [
          'beta', 'run', 'deploy', '${_SERVICE_NAME}', 
          '--image', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest', 
          '--region', '${_REGION}', 
          '--update-env-vars', 'NODE_ENV=dev,RUN_PORT=8080,HOST_CLOUDFUNCTION=https://pdfservice-dot-balmy-channel-211708.appspot.com/api/pdf'
      ]
  waitFor:
    - push_image

timeout: 1200s
substitutions:
  _SERVICE_NAME: gcp-demo
  _IMAGE_NAME: gcp-demo-image
  _REGION: us-central1
options:
  machineType: 'N1_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'
tags: ['gcp-demo', 'dev']
images: ['gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest']